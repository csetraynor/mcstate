% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcmc_parameters_shared.R
\name{pmcmc_parameters_shared}
\alias{pmcmc_parameters_shared}
\title{pmcmc_parameters_shared}
\description{
Construct possibly-shared parameters for use with
\code{\link[=pmcmc]{pmcmc()}}. This creates a utility object that is used
internally to work with possibly-shared parameters. Most users only
need to construct this object, but see the examples for how it can be
used.
}
\examples{
#Construct an object with four parameters, two varied, two fixed:
pars <- mcstate::pmcmc_parameters$new(
  list(mcstate::pmcmc_parameter("a", 0.1, min = 0, max = 1,
                                prior = function(a) log(a)),
       mcstate::pmcmc_parameter("b", 0, prior = dnorm),
       mcstate::pmcmc_parameter("c", 0.5, min = 0, max = 1,
                                prior = dunif),
       mcstate::pmcmc_parameter("d", 1)),
  proposal = matrix(c(1, 0.5, 0.5, 2), 2, 2),
  varied = c("a", "c"),
  populations = c("Europe", "America")
)
}
\section{Super class}{
\code{\link[mcstate:pmcmc_parameters]{mcstate::pmcmc_parameters}} -> \code{pmcmc_parameters_shared}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pmcmc_parameters_shared$new()}}
\item \href{#method-initial}{\code{pmcmc_parameters_shared$initial()}}
\item \href{#method-summary}{\code{pmcmc_parameters_shared$summary()}}
\item \href{#method-prior}{\code{pmcmc_parameters_shared$prior()}}
\item \href{#method-propose}{\code{pmcmc_parameters_shared$propose()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mcstate" data-topic="pmcmc_parameters" data-id="fix">}\href{../../mcstate/html/pmcmc_parameters.html#method-fix}{\code{mcstate::pmcmc_parameters$fix()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mcstate" data-topic="pmcmc_parameters" data-id="model">}\href{../../mcstate/html/pmcmc_parameters.html#method-model}{\code{mcstate::pmcmc_parameters$model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mcstate" data-topic="pmcmc_parameters" data-id="names">}\href{../../mcstate/html/pmcmc_parameters.html#method-names}{\code{mcstate::pmcmc_parameters$names()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create the pmcmc_parameters_shared object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_shared$new(
  parameters,
  proposal,
  transform = NULL,
  varied = NULL,
  populations = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parameters}}{A \code{list} of
\link{pmcmc_parameter} objects, each of which describe a
single parameter in your model. If \code{parameters} is named, then
these names must match the \verb{$name} element of each parameter is
used (this is verified).}

\item{\code{proposal}}{A square proposal distribution corresponding to the
variance-covariance matrix of a multivariate gaussian distribution
used to generate new parameters. It must have the same number of
rows and columns as there are elements in \code{parameters}, and if
named the names must correspond exactly to the names in
\code{parameters}. Because it corresponds to a variance-covariance
matrix it must be symmetric and positive definite.}

\item{\code{transform}}{An optional transformation function to apply
to your parameter vector immediately before passing it to the
model function. If not given, then \link{as.list} is
used, as dust models require this. However, if t you need to
generate derived parameters from those being actively sampled
you can do arbitrary transformations here.}

\item{\code{varied}}{Optional character vector to specify which parameters
can vary between populations. If not given then assumed all parameters
are fixed.}

\item{\code{populations}}{Specifies the names of the different populations.
Ignored if \code{varied} is NULL.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initial"></a>}}
\if{latex}{\out{\hypertarget{method-initial}{}}}
\subsection{Method \code{initial()}}{
Return the initial parameter values as a named numeric
vector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_shared$initial()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summary"></a>}}
\if{latex}{\out{\hypertarget{method-summary}{}}}
\subsection{Method \code{summary()}}{
Return a \code{data.frame} with information about
parameters (name, min, max, and discrete).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_shared$summary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prior"></a>}}
\if{latex}{\out{\hypertarget{method-prior}{}}}
\subsection{Method \code{prior()}}{
Compute the priors for a parameter list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_shared$prior(theta, type = c("fixed", "varied", "both"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter list in the same order as your
parameters were defined in (see \verb{$names()} for that order.}

\item{\code{type}}{specifies which type of parameters should be proposed,
either fixed parameters only ("fixed"), varied only ("varied"), or
both ("both") types. For 'fixed' and 'varied' then parameters of the
other type is returned equal to corresponding value in \code{theta}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-propose"></a>}}
\if{latex}{\out{\hypertarget{method-propose}{}}}
\subsection{Method \code{propose()}}{
Propose a new parameter vector given a current parameter
vector. This proposes a new parameter vector given your current
vector and the variance-covariance matrix of your proposal
kernel, discretises any discrete values, and reflects bounded
parameters until they lie within \code{min}:\code{max}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pmcmc_parameters_shared$propose(
  theta,
  scale = 1,
  type = c("fixed", "varied", "both")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{a parameter vector in the same order as your
parameters were defined in (see \verb{$names()} for that order.}

\item{\code{scale}}{an optional scaling factor to apply to the
proposal distribution. This may be useful in sampling starting
points. The parameter is equivalent to a multiplicative factor
applied to the variance covariance matrix.}

\item{\code{type}}{specifies which type of parameters should be proposed,
either fixed parameters only ("fixed"), varied only ("varied"), or
both ("both") types. For 'fixed' and 'varied' then parameters of the
other type is returned equal to corresponding value in \code{theta}.}
}
\if{html}{\out{</div>}}
}
}
}
